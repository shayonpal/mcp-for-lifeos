{"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":26,"numPassedTests":450,"numPendingTestSuites":0,"numPendingTests":4,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":26,"numTotalTests":454,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1761861653849,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["JSONL Analytics Stress Tests","Memory Usage Tests"],"duration":43,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Stress Tests Memory Usage Tests should maintain stable memory usage during continuous writes","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should maintain stable memory usage during continuous writes"},{"ancestorTitles":["JSONL Analytics Stress Tests","Memory Usage Tests"],"duration":424,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Stress Tests Memory Usage Tests should not leak memory when reading large JSONL files","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should not leak memory when reading large JSONL files"},{"ancestorTitles":["JSONL Analytics Stress Tests","Data Integrity Under Load"],"duration":1425,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Stress Tests Data Integrity Under Load should maintain data integrity with 10 concurrent processes","invocations":1,"location":null,"numPassingAsserts":1012,"retryReasons":[],"status":"passed","title":"should maintain data integrity with 10 concurrent processes"},{"ancestorTitles":["JSONL Analytics Stress Tests","Data Integrity Under Load"],"duration":758,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Stress Tests Data Integrity Under Load should handle rapid write bursts without data corruption","invocations":1,"location":null,"numPassingAsserts":5006,"retryReasons":[],"status":"passed","title":"should handle rapid write bursts without data corruption"},{"ancestorTitles":["JSONL Analytics Stress Tests","Performance Benchmarks"],"duration":5019,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Stress Tests Performance Benchmarks should achieve > 1000 writes per second","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should achieve > 1000 writes per second"},{"ancestorTitles":["JSONL Analytics Stress Tests","Performance Benchmarks"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Stress Tests Performance Benchmarks should handle mixed read/write operations efficiently","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle mixed read/write operations efficiently"},{"ancestorTitles":["JSONL Analytics Stress Tests","Error Recovery"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Stress Tests Error Recovery should recover from corrupted JSONL files","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should recover from corrupted JSONL files"},{"ancestorTitles":["JSONL Analytics Stress Tests","Error Recovery"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Stress Tests Error Recovery should handle file system errors gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle file system errors gracefully"}],"endTime":1761861661737,"message":"","name":"/Users/shayon/DevProjects/mcp-for-lifeos/tests/integration/jsonl-stress.test.ts","startTime":1761861653967,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["MCP Server Concurrent Operations","Multiple Server Instances"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Concurrent Operations Multiple Server Instances should handle multiple MCP server instances writing analytics concurrently","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should handle multiple MCP server instances writing analytics concurrently"},{"ancestorTitles":["MCP Server Concurrent Operations","Multiple Server Instances"],"duration":2545,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Concurrent Operations Multiple Server Instances should maintain data integrity when servers start and stop frequently","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should maintain data integrity when servers start and stop frequently"},{"ancestorTitles":["MCP Server Concurrent Operations","Analytics Collection Behavior"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Concurrent Operations Analytics Collection Behavior should append to existing JSONL file","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should append to existing JSONL file"},{"ancestorTitles":["MCP Server Concurrent Operations","Analytics Collection Behavior"],"duration":2123,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Concurrent Operations Analytics Collection Behavior should handle rapid sequential writes without data loss","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should handle rapid sequential writes without data loss"}],"endTime":1761861666434,"message":"","name":"/Users/shayon/DevProjects/mcp-for-lifeos/tests/integration/mcp-server-concurrent.test.ts","startTime":1761861661743,"status":"focused","summary":""},{"assertionResults":[{"ancestorTitles":["Concurrent JSONL Integration Tests","Concurrent Process Writes"],"duration":1045,"failureDetails":[],"failureMessages":[],"fullName":"Concurrent JSONL Integration Tests Concurrent Process Writes should handle 3 concurrent processes with zero data loss","invocations":1,"location":null,"numPassingAsserts":305,"retryReasons":[],"status":"passed","title":"should handle 3 concurrent processes with zero data loss"},{"ancestorTitles":["Concurrent JSONL Integration Tests","Concurrent Process Writes"],"duration":364,"failureDetails":[],"failureMessages":[],"fullName":"Concurrent JSONL Integration Tests Concurrent Process Writes should maintain line atomicity (no interleaved writes)","invocations":1,"location":null,"numPassingAsserts":901,"retryReasons":[],"status":"passed","title":"should maintain line atomicity (no interleaved writes)"},{"ancestorTitles":["Concurrent JSONL Integration Tests","Concurrent Process Writes"],"duration":322,"failureDetails":[],"failureMessages":[],"fullName":"Concurrent JSONL Integration Tests Concurrent Process Writes should handle process crashes gracefully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should handle process crashes gracefully"},{"ancestorTitles":["Concurrent JSONL Integration Tests","Format Migration"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Concurrent JSONL Integration Tests Format Migration should read existing JSON format while writing JSONL","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should read existing JSON format while writing JSONL"},{"ancestorTitles":["Concurrent JSONL Integration Tests","Format Migration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Concurrent JSONL Integration Tests Format Migration should auto-detect format based on file extension","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should auto-detect format based on file extension"},{"ancestorTitles":["Concurrent JSONL Integration Tests","Performance Validation"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Concurrent JSONL Integration Tests Performance Validation should complete append operations within 5ms","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should complete append operations within 5ms"},{"ancestorTitles":["Concurrent JSONL Integration Tests","Performance Validation"],"duration":1021,"failureDetails":[],"failureMessages":[],"fullName":"Concurrent JSONL Integration Tests Performance Validation should handle high-frequency writes efficiently","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle high-frequency writes efficiently"},{"ancestorTitles":["Concurrent JSONL Integration Tests","Edge Cases"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"Concurrent JSONL Integration Tests Edge Cases should handle disk full scenarios gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle disk full scenarios gracefully"},{"ancestorTitles":["Concurrent JSONL Integration Tests","Edge Cases"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Concurrent JSONL Integration Tests Edge Cases should handle permission denied errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle permission denied errors"},{"ancestorTitles":["Concurrent JSONL Integration Tests","Edge Cases"],"duration":22,"failureDetails":[],"failureMessages":[],"fullName":"Concurrent JSONL Integration Tests Edge Cases should handle very large individual metrics","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle very large individual metrics"}],"endTime":1761861669257,"message":"","name":"/Users/shayon/DevProjects/mcp-for-lifeos/tests/integration/concurrent-jsonl.test.ts","startTime":1761861666440,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["JSONL Analytics Unit Tests","Atomic Append Operations"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Unit Tests Atomic Append Operations should use fs.appendFileSync for atomic writes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use fs.appendFileSync for atomic writes"},{"ancestorTitles":["JSONL Analytics Unit Tests","Atomic Append Operations"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Unit Tests Atomic Append Operations should ensure line size stays under PIPE_BUF (4096 bytes)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should ensure line size stays under PIPE_BUF (4096 bytes)"},{"ancestorTitles":["JSONL Analytics Unit Tests","Atomic Append Operations"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Unit Tests Atomic Append Operations should handle write errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle write errors gracefully"},{"ancestorTitles":["JSONL Analytics Unit Tests","JSONL Line Formatting"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Unit Tests JSONL Line Formatting should format each metric as a single JSON line","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should format each metric as a single JSON line"},{"ancestorTitles":["JSONL Analytics Unit Tests","JSONL Line Formatting"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Unit Tests JSONL Line Formatting should not include multi-line JSON formatting","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should not include multi-line JSON formatting"},{"ancestorTitles":["JSONL Analytics Unit Tests","JSONL Line Formatting"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Unit Tests JSONL Line Formatting should escape special characters properly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should escape special characters properly"},{"ancestorTitles":["JSONL Analytics Unit Tests","Instance ID Generation"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Unit Tests Instance ID Generation should generate unique UUID v4 instance IDs","invocations":1,"location":null,"numPassingAsserts":101,"retryReasons":[],"status":"passed","title":"should generate unique UUID v4 instance IDs"},{"ancestorTitles":["JSONL Analytics Unit Tests","Instance ID Generation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Unit Tests Instance ID Generation should include process ID and hostname","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should include process ID and hostname"},{"ancestorTitles":["JSONL Analytics Unit Tests","Instance ID Generation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Unit Tests Instance ID Generation should maintain instance ID throughout session","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should maintain instance ID throughout session"},{"ancestorTitles":["JSONL Analytics Unit Tests","Malformed Line Parsing"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Unit Tests Malformed Line Parsing should skip malformed JSON lines","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should skip malformed JSON lines"},{"ancestorTitles":["JSONL Analytics Unit Tests","Malformed Line Parsing"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Unit Tests Malformed Line Parsing should handle partial lines from process crashes","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle partial lines from process crashes"},{"ancestorTitles":["JSONL Analytics Unit Tests","Malformed Line Parsing"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Unit Tests Malformed Line Parsing should handle empty lines and whitespace","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle empty lines and whitespace"},{"ancestorTitles":["JSONL Analytics Unit Tests","Format Detection (JSON vs JSONL)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Unit Tests Format Detection (JSON vs JSONL) should detect format by file extension","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should detect format by file extension"},{"ancestorTitles":["JSONL Analytics Unit Tests","Format Detection (JSON vs JSONL)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Unit Tests Format Detection (JSON vs JSONL) should detect format by content structure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should detect format by content structure"},{"ancestorTitles":["JSONL Analytics Unit Tests","Format Detection (JSON vs JSONL)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Unit Tests Format Detection (JSON vs JSONL) should support reading both formats during migration","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should support reading both formats during migration"},{"ancestorTitles":["JSONL Analytics Unit Tests","Buffer Management"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Unit Tests Buffer Management should flush buffer when size limit reached","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should flush buffer when size limit reached"},{"ancestorTitles":["JSONL Analytics Unit Tests","Buffer Management"],"duration":255,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Unit Tests Buffer Management should flush buffer on timer interval","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should flush buffer on timer interval"}],"endTime":1761861669548,"message":"","name":"/Users/shayon/DevProjects/mcp-for-lifeos/tests/unit/jsonl-analytics.test.ts","startTime":1761861669259,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Request Handler - isToolAllowed","Always-available tools"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - isToolAllowed Always-available tools allows always-available tools in legacy-only mode","invocations":1,"location":null,"numPassingAsserts":18,"retryReasons":[],"status":"passed","title":"allows always-available tools in legacy-only mode"},{"ancestorTitles":["Request Handler - isToolAllowed","Always-available tools"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - isToolAllowed Always-available tools allows always-available tools in consolidated-only mode","invocations":1,"location":null,"numPassingAsserts":18,"retryReasons":[],"status":"passed","title":"allows always-available tools in consolidated-only mode"},{"ancestorTitles":["Request Handler - isToolAllowed","Always-available tools"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - isToolAllowed Always-available tools allows always-available tools in consolidated-with-aliases mode","invocations":1,"location":null,"numPassingAsserts":18,"retryReasons":[],"status":"passed","title":"allows always-available tools in consolidated-with-aliases mode"},{"ancestorTitles":["Request Handler - isToolAllowed","Consolidated tools"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - isToolAllowed Consolidated tools allows consolidated tools in consolidated-only mode","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"allows consolidated tools in consolidated-only mode"},{"ancestorTitles":["Request Handler - isToolAllowed","Consolidated tools"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - isToolAllowed Consolidated tools allows consolidated tools in consolidated-with-aliases mode","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"allows consolidated tools in consolidated-with-aliases mode"},{"ancestorTitles":["Request Handler - isToolAllowed","Consolidated tools"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - isToolAllowed Consolidated tools blocks consolidated tools in legacy-only mode","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"blocks consolidated tools in legacy-only mode"},{"ancestorTitles":["Request Handler - isToolAllowed","Legacy tools"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - isToolAllowed Legacy tools allows legacy tools in legacy-only mode","invocations":1,"location":null,"numPassingAsserts":22,"retryReasons":[],"status":"passed","title":"allows legacy tools in legacy-only mode"},{"ancestorTitles":["Request Handler - isToolAllowed","Legacy tools"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - isToolAllowed Legacy tools allows legacy tools in consolidated-with-aliases mode","invocations":1,"location":null,"numPassingAsserts":22,"retryReasons":[],"status":"passed","title":"allows legacy tools in consolidated-with-aliases mode"},{"ancestorTitles":["Request Handler - isToolAllowed","Legacy tools"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - isToolAllowed Legacy tools blocks legacy tools in consolidated-only mode","invocations":1,"location":null,"numPassingAsserts":22,"retryReasons":[],"status":"passed","title":"blocks legacy tools in consolidated-only mode"},{"ancestorTitles":["Request Handler - isToolAllowed","Unknown tools"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - isToolAllowed Unknown tools blocks unknown tools in legacy-only mode","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"blocks unknown tools in legacy-only mode"},{"ancestorTitles":["Request Handler - isToolAllowed","Unknown tools"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - isToolAllowed Unknown tools blocks unknown tools in consolidated-only mode","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"blocks unknown tools in consolidated-only mode"},{"ancestorTitles":["Request Handler - isToolAllowed","Unknown tools"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - isToolAllowed Unknown tools blocks unknown tools in consolidated-with-aliases mode","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"blocks unknown tools in consolidated-with-aliases mode"},{"ancestorTitles":["Request Handler - isToolAllowed","Edge cases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - isToolAllowed Edge cases handles empty tool name","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"handles empty tool name"},{"ancestorTitles":["Request Handler - isToolAllowed","Edge cases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - isToolAllowed Edge cases handles case-sensitive tool names","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"handles case-sensitive tool names"},{"ancestorTitles":["Request Handler - isToolAllowed","Edge cases"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - isToolAllowed Edge cases returns structured error message for invalid mode","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"returns structured error message for invalid mode"},{"ancestorTitles":["Request Handler - validateMaxResults","Default behavior"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - validateMaxResults Default behavior returns default value (25) when undefined","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"returns default value (25) when undefined"},{"ancestorTitles":["Request Handler - validateMaxResults","Valid range (1-100)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - validateMaxResults Valid range (1-100) accepts value within range without adjustment","invocations":1,"location":null,"numPassingAsserts":18,"retryReasons":[],"status":"passed","title":"accepts value within range without adjustment"},{"ancestorTitles":["Request Handler - validateMaxResults","Constraint to minimum (1)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - validateMaxResults Constraint to minimum (1) constrains negative values to minimum","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"constrains negative values to minimum"},{"ancestorTitles":["Request Handler - validateMaxResults","Constraint to minimum (1)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - validateMaxResults Constraint to minimum (1) constrains zero to minimum","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"constrains zero to minimum"},{"ancestorTitles":["Request Handler - validateMaxResults","Constraint to maximum (100)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - validateMaxResults Constraint to maximum (100) constrains values above 100","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"constrains values above 100"},{"ancestorTitles":["Request Handler - validateMaxResults","Constraint to maximum (100)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - validateMaxResults Constraint to maximum (100) constrains very large values","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"constrains very large values"},{"ancestorTitles":["Request Handler - validateMaxResults","Tool name parameter (MCP-95)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - validateMaxResults Tool name parameter (MCP-95) accepts any tool name without tool-specific constraints","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"accepts any tool name without tool-specific constraints"},{"ancestorTitles":["Request Handler - createRequestHandler","Factory creation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - createRequestHandler Factory creation creates handler function","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"creates handler function"},{"ancestorTitles":["Request Handler - createRequestHandler","Factory creation"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - createRequestHandler Factory creation creates handler without executing side effects","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"creates handler without executing side effects"},{"ancestorTitles":["Request Handler - createRequestHandler","Registry population (MCP-96)"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - createRequestHandler Registry population (MCP-96) throws \"Missing arguments\" for request without arguments","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"throws \"Missing arguments\" for request without arguments"},{"ancestorTitles":["Request Handler - createRequestHandler","Registry population (MCP-96)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - createRequestHandler Registry population (MCP-96) executes consolidated tools via registry","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"executes consolidated tools via registry"},{"ancestorTitles":["Request Handler - createRequestHandler","Registry population (MCP-96)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - createRequestHandler Registry population (MCP-96) creates notes via consolidated registry handler","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"creates notes via consolidated registry handler"},{"ancestorTitles":["Request Handler - createRequestHandler","Registry population (MCP-96)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - createRequestHandler Registry population (MCP-96) lists data via consolidated registry handler","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"lists data via consolidated registry handler"},{"ancestorTitles":["Request Handler - createRequestHandler","Registry population (MCP-96)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - createRequestHandler Registry population (MCP-96) throws \"Unknown tool\" when registry lacks tool","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"throws \"Unknown tool\" when registry lacks tool"},{"ancestorTitles":["Request Handler - createRequestHandler","Registry population (MCP-96)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - createRequestHandler Registry population (MCP-96) validates tool mode before registry lookup","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"validates tool mode before registry lookup"},{"ancestorTitles":["Request Handler - createRequestHandler","Tool mode validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - createRequestHandler Tool mode validation validates tool availability in legacy-only mode","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"validates tool availability in legacy-only mode"},{"ancestorTitles":["Request Handler - createRequestHandler","Tool mode validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - createRequestHandler Tool mode validation validates tool availability in consolidated-only mode","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"validates tool availability in consolidated-only mode"},{"ancestorTitles":["Request Handler - createRequestHandler","Handler context"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - createRequestHandler Handler context builds context with provided configuration","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"builds context with provided configuration"}],"endTime":1761861669775,"message":"","name":"/Users/shayon/DevProjects/mcp-for-lifeos/tests/unit/server/request-handler.test.ts","startTime":1761861669555,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["MCP Server Factory","isValidToolMode"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory isValidToolMode should return true for valid tool modes","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return true for valid tool modes"},{"ancestorTitles":["MCP Server Factory","isValidToolMode"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory isValidToolMode should return false for invalid tool modes","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should return false for invalid tool modes"},{"ancestorTitles":["MCP Server Factory","parseToolMode"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory parseToolMode should use TOOL_MODE when set to valid value","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should use TOOL_MODE when set to valid value"},{"ancestorTitles":["MCP Server Factory","parseToolMode"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory parseToolMode should fallback to default when TOOL_MODE is invalid","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should fallback to default when TOOL_MODE is invalid"},{"ancestorTitles":["MCP Server Factory","parseToolMode"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory parseToolMode should use CONSOLIDATED_TOOLS_ENABLED for backward compatibility","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should use CONSOLIDATED_TOOLS_ENABLED for backward compatibility"},{"ancestorTitles":["MCP Server Factory","parseToolMode"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory parseToolMode should prefer TOOL_MODE over CONSOLIDATED_TOOLS_ENABLED","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should prefer TOOL_MODE over CONSOLIDATED_TOOLS_ENABLED"},{"ancestorTitles":["MCP Server Factory","parseToolMode"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory parseToolMode should default to consolidated-only when no env vars set","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should default to consolidated-only when no env vars set"},{"ancestorTitles":["MCP Server Factory","generateSessionId"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory generateSessionId should generate valid UUID","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should generate valid UUID"},{"ancestorTitles":["MCP Server Factory","generateSessionId"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory generateSessionId should generate unique IDs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should generate unique IDs"},{"ancestorTitles":["MCP Server Factory","extractClientInfo"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory extractClientInfo should extract client name and version from server","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should extract client name and version from server"},{"ancestorTitles":["MCP Server Factory","extractClientInfo"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory extractClientInfo should handle undefined client version","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle undefined client version"},{"ancestorTitles":["MCP Server Factory","extractClientInfo"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory extractClientInfo should handle partial client info (missing version)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle partial client info (missing version)"},{"ancestorTitles":["MCP Server Factory","extractClientInfo"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory extractClientInfo should handle partial client info (missing name)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle partial client info (missing name)"},{"ancestorTitles":["MCP Server Factory","extractClientInfo"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory extractClientInfo should extract info from multiple server instances consistently","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should extract info from multiple server instances consistently"},{"ancestorTitles":["MCP Server Factory","extractClientInfo"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory extractClientInfo should handle real-world client names","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle real-world client names"},{"ancestorTitles":["MCP Server Factory","createMcpServer"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory createMcpServer should create server with minimal config","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should create server with minimal config"},{"ancestorTitles":["MCP Server Factory","createMcpServer"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory createMcpServer should throw error for invalid vaultPath","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should throw error for invalid vaultPath"},{"ancestorTitles":["MCP Server Factory","createMcpServer"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory createMcpServer should throw error for non-existent vaultPath","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error for non-existent vaultPath"},{"ancestorTitles":["MCP Server Factory","createMcpServer"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory createMcpServer should throw error for inaccessible vaultPath","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error for inaccessible vaultPath"},{"ancestorTitles":["MCP Server Factory","createMcpServer"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory createMcpServer should use provided server name and version","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use provided server name and version"},{"ancestorTitles":["MCP Server Factory","createMcpServer"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory createMcpServer should use default server name and version","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use default server name and version"},{"ancestorTitles":["MCP Server Factory","createMcpServer"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory createMcpServer should accept explicit tool mode","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should accept explicit tool mode"},{"ancestorTitles":["MCP Server Factory","createMcpServer"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory createMcpServer should parse tool mode from environment","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should parse tool mode from environment"},{"ancestorTitles":["MCP Server Factory","createMcpServer"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory createMcpServer should accept custom session ID","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should accept custom session ID"},{"ancestorTitles":["MCP Server Factory","createMcpServer"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory createMcpServer should generate session ID if not provided","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should generate session ID if not provided"},{"ancestorTitles":["MCP Server Factory","createMcpServer"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory createMcpServer should create stdio transport by default","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should create stdio transport by default"},{"ancestorTitles":["MCP Server Factory","createMcpServer"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory createMcpServer should not create stdio transport when disabled","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not create stdio transport when disabled"},{"ancestorTitles":["MCP Server Factory","createMcpServer"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory createMcpServer should return instance with lifecycle methods","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should return instance with lifecycle methods"},{"ancestorTitles":["MCP Server Factory","Server Factory Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory Server Factory Integration should create server instance conforming to McpServerInstance contract","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should create server instance conforming to McpServerInstance contract"},{"ancestorTitles":["MCP Server Factory","Server Factory Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"MCP Server Factory Server Factory Integration should share analytics singleton across instances","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should share analytics singleton across instances"}],"endTime":1761861669861,"message":"","name":"/Users/shayon/DevProjects/mcp-for-lifeos/tests/unit/mcp-server-factory.test.ts","startTime":1761861669777,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Daily Note Task Addition Workflow","Reproducing Issue #88"],"duration":16,"failureDetails":[],"failureMessages":[],"fullName":"Daily Note Task Addition Workflow Reproducing Issue #88 should add tasks to existing Day's Notes section","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should add tasks to existing Day's Notes section"},{"ancestorTitles":["Daily Note Task Addition Workflow","Reproducing Issue #88"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Daily Note Task Addition Workflow Reproducing Issue #88 should handle multiple task additions without creating duplicates","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle multiple task additions without creating duplicates"},{"ancestorTitles":["Daily Note Task Addition Workflow","Reproducing Issue #88"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"Daily Note Task Addition Workflow Reproducing Issue #88 should fail gracefully when heading doesn't exist","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should fail gracefully when heading doesn't exist"},{"ancestorTitles":["Daily Note Task Addition Workflow","Reproducing Issue #88"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Daily Note Task Addition Workflow Reproducing Issue #88 should handle case variations in Day's Notes","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle case variations in Day's Notes"},{"ancestorTitles":["Daily Note Task Addition Workflow","Task Insertion Order (Issue #90)"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Daily Note Task Addition Workflow Task Insertion Order (Issue #90) should append new tasks at the bottom of existing task lists","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should append new tasks at the bottom of existing task lists"},{"ancestorTitles":["Daily Note Task Addition Workflow","Task Insertion Order (Issue #90)"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Daily Note Task Addition Workflow Task Insertion Order (Issue #90) should handle mixed content with tasks properly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle mixed content with tasks properly"},{"ancestorTitles":["Daily Note Task Addition Workflow","Task Insertion Order (Issue #90)"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Daily Note Task Addition Workflow Task Insertion Order (Issue #90) should insert task at bottom when section has no existing tasks","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should insert task at bottom when section has no existing tasks"},{"ancestorTitles":["Daily Note Task Addition Workflow","Task Insertion Order (Issue #90)"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Daily Note Task Addition Workflow Task Insertion Order (Issue #90) should NOT insert tasks at the beginning of the section","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should NOT insert tasks at the beginning of the section"},{"ancestorTitles":["Daily Note Task Addition Workflow","Task Insertion Order (Issue #90)"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Daily Note Task Addition Workflow Task Insertion Order (Issue #90) should handle the exact scenario from issue #90","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle the exact scenario from issue #90"},{"ancestorTitles":["Daily Note Task Addition Workflow","Task Insertion Order (Issue #90)"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Daily Note Task Addition Workflow Task Insertion Order (Issue #90) should handle case when section has no tasks initially","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle case when section has no tasks initially"},{"ancestorTitles":["Daily Note Task Addition Workflow","Task Insertion Order (Issue #90)"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Daily Note Task Addition Workflow Task Insertion Order (Issue #90) should handle edge case - heading with no content","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle edge case - heading with no content"},{"ancestorTitles":["Daily Note Task Addition Workflow","Error Scenarios from RCA"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Daily Note Task Addition Workflow Error Scenarios from RCA should not create duplicate files when updating daily notes","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should not create duplicate files when updating daily notes"}],"endTime":1761861669970,"message":"","name":"/Users/shayon/DevProjects/mcp-for-lifeos/tests/integration/daily-note-task-workflow.test.ts","startTime":1761861669866,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Daily Note Template Integration (Direct)","Daily note creation with templates"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"Daily Note Template Integration (Direct) Daily note creation with templates should create daily note using configured template","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"status":"passed","title":"should create daily note using configured template"},{"ancestorTitles":["Daily Note Template Integration (Direct)","Daily note creation with templates"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"Daily Note Template Integration (Direct) Daily note creation with templates should handle different date formats","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should handle different date formats"},{"ancestorTitles":["Daily Note Template Integration (Direct)","Daily note creation with templates"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Daily Note Template Integration (Direct) Daily note creation with templates should create weekly template when specified","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should create weekly template when specified"},{"ancestorTitles":["Daily Note Template Integration (Direct)","Daily note creation with templates"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Daily Note Template Integration (Direct) Daily note creation with templates should handle missing template gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle missing template gracefully"},{"ancestorTitles":["Daily Note Template Integration (Direct)","Daily note creation with templates"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Daily Note Template Integration (Direct) Daily note creation with templates should apply template caching","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should apply template caching"},{"ancestorTitles":["Daily Note Template Integration (Direct)","Template processing edge cases"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Daily Note Template Integration (Direct) Template processing edge cases should handle malformed template syntax","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle malformed template syntax"},{"ancestorTitles":["Daily Note Template Integration (Direct)","Template processing edge cases"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Daily Note Template Integration (Direct) Template processing edge cases should handle complex date formatting","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should handle complex date formatting"},{"ancestorTitles":["Daily Note Template Integration (Direct)","Template processing edge cases"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Daily Note Template Integration (Direct) Template processing edge cases should handle nested folders in template path","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle nested folders in template path"},{"ancestorTitles":["Daily Note Template Integration (Direct)","VaultUtils integration"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Daily Note Template Integration (Direct) VaultUtils integration should create daily note with VaultUtils","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should create daily note with VaultUtils"}],"endTime":1761861670055,"message":"","name":"/Users/shayon/DevProjects/mcp-for-lifeos/tests/integration/daily-note-simple.test.ts","startTime":1761861669972,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Insert Content - Section Targeting","Daily Note - Day's Notes Section"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Insert Content - Section Targeting Daily Note - Day's Notes Section should find \"Day's Notes\" heading correctly","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should find \"Day's Notes\" heading correctly"},{"ancestorTitles":["Insert Content - Section Targeting","Daily Note - Day's Notes Section"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Insert Content - Section Targeting Daily Note - Day's Notes Section should handle exact heading matching with hash prefix","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle exact heading matching with hash prefix"},{"ancestorTitles":["Insert Content - Section Targeting","Daily Note - Day's Notes Section"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Insert Content - Section Targeting Daily Note - Day's Notes Section should add multiple tasks to the same section","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should add multiple tasks to the same section"},{"ancestorTitles":["Insert Content - Section Targeting","Daily Note - Day's Notes Section"],"duration":11,"failureDetails":[],"failureMessages":[],"fullName":"Insert Content - Section Targeting Daily Note - Day's Notes Section should throw error for non-existent heading","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error for non-existent heading"},{"ancestorTitles":["Insert Content - Section Targeting","Daily Note - Day's Notes Section"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Insert Content - Section Targeting Daily Note - Day's Notes Section should handle case sensitivity correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle case sensitivity correctly"},{"ancestorTitles":["Insert Content - Section Targeting","Template Variations"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Insert Content - Section Targeting Template Variations should handle template with \"Days Notes\" (no apostrophe)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle template with \"Days Notes\" (no apostrophe)"},{"ancestorTitles":["Insert Content - Section Targeting","Template Variations"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Insert Content - Section Targeting Template Variations should handle template with different heading levels","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle template with different heading levels"}],"endTime":1761861670119,"message":"","name":"/Users/shayon/DevProjects/mcp-for-lifeos/tests/unit/insert-content-sections.test.ts","startTime":1761861670057,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["VaultUtils.insertContent","Heading-based insertion"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"VaultUtils.insertContent Heading-based insertion should insert content after a heading","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should insert content after a heading"},{"ancestorTitles":["VaultUtils.insertContent","Heading-based insertion"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"VaultUtils.insertContent Heading-based insertion should insert content before a heading","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should insert content before a heading"},{"ancestorTitles":["VaultUtils.insertContent","Heading-based insertion"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"VaultUtils.insertContent Heading-based insertion should handle headings without hash prefix in target","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle headings without hash prefix in target"},{"ancestorTitles":["VaultUtils.insertContent","Heading-based insertion"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"VaultUtils.insertContent Heading-based insertion should throw error if heading not found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error if heading not found"},{"ancestorTitles":["VaultUtils.insertContent","Block reference insertion"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"VaultUtils.insertContent Block reference insertion should insert content after a block reference","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should insert content after a block reference"},{"ancestorTitles":["VaultUtils.insertContent","Block reference insertion"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"VaultUtils.insertContent Block reference insertion should handle block ref without caret prefix","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle block ref without caret prefix"},{"ancestorTitles":["VaultUtils.insertContent","Pattern-based insertion"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"VaultUtils.insertContent Pattern-based insertion should insert content after a text pattern","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should insert content after a text pattern"},{"ancestorTitles":["VaultUtils.insertContent","Pattern-based insertion"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"VaultUtils.insertContent Pattern-based insertion should throw error if pattern not found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error if pattern not found"},{"ancestorTitles":["VaultUtils.insertContent","Line number insertion"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"VaultUtils.insertContent Line number insertion should insert content at specific line number","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should insert content at specific line number"},{"ancestorTitles":["VaultUtils.insertContent","Line number insertion"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"VaultUtils.insertContent Line number insertion should throw error if line number out of range","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error if line number out of range"},{"ancestorTitles":["VaultUtils.insertContent","Position options"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"VaultUtils.insertContent Position options should append to end of target line","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should append to end of target line"},{"ancestorTitles":["VaultUtils.insertContent","Position options"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"VaultUtils.insertContent Position options should prepend to beginning of target line","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should prepend to beginning of target line"},{"ancestorTitles":["VaultUtils.insertContent","Newline handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"VaultUtils.insertContent Newline handling should ensure newlines by default","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should ensure newlines by default"},{"ancestorTitles":["VaultUtils.insertContent","Newline handling"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"VaultUtils.insertContent Newline handling should not add newlines when disabled","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not add newlines when disabled"}],"endTime":1761861670194,"message":"","name":"/Users/shayon/DevProjects/mcp-for-lifeos/tests/unit/insert-content.test.ts","startTime":1761861670121,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Token-Limited Search Integration","ObsidianLinks with Token Budget"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Token-Limited Search Integration ObsidianLinks with Token Budget should format search result and consume budget","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should format search result and consume budget"},{"ancestorTitles":["Token-Limited Search Integration","ObsidianLinks with Token Budget"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Token-Limited Search Integration ObsidianLinks with Token Budget should format in detailed mode with token budget","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should format in detailed mode with token budget"},{"ancestorTitles":["Token-Limited Search Integration","ObsidianLinks with Token Budget"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Token-Limited Search Integration ObsidianLinks with Token Budget should handle multiple results with budget tracking","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle multiple results with budget tracking"},{"ancestorTitles":["Token-Limited Search Integration","ObsidianLinks with Token Budget"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Token-Limited Search Integration ObsidianLinks with Token Budget should stop adding results when budget exhausted","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should stop adding results when budget exhausted"},{"ancestorTitles":["Token-Limited Search Integration","maxResults Parameter Validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Token-Limited Search Integration maxResults Parameter Validation should constrain minimum maxResults to 1","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should constrain minimum maxResults to 1"},{"ancestorTitles":["Token-Limited Search Integration","maxResults Parameter Validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Token-Limited Search Integration maxResults Parameter Validation should constrain maximum maxResults to 100","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should constrain maximum maxResults to 100"},{"ancestorTitles":["Token-Limited Search Integration","maxResults Parameter Validation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Token-Limited Search Integration maxResults Parameter Validation should accept valid range 1-100","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should accept valid range 1-100"},{"ancestorTitles":["Token-Limited Search Integration","maxResults Parameter Validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Token-Limited Search Integration maxResults Parameter Validation should return default when undefined","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return default when undefined"},{"ancestorTitles":["Token-Limited Search Integration","Truncation Metadata Generation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Token-Limited Search Integration Truncation Metadata Generation should generate metadata when results truncated","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should generate metadata when results truncated"},{"ancestorTitles":["Token-Limited Search Integration","Truncation Metadata Generation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Token-Limited Search Integration Truncation Metadata Generation should indicate no truncation when all results shown","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should indicate no truncation when all results shown"},{"ancestorTitles":["Token-Limited Search Integration","Truncation Metadata Generation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Token-Limited Search Integration Truncation Metadata Generation should indicate auto-downgrade in suggestion","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should indicate auto-downgrade in suggestion"},{"ancestorTitles":["Token-Limited Search Integration","End-to-End Scenarios"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Token-Limited Search Integration End-to-End Scenarios should handle search with maxResults constraint","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle search with maxResults constraint"},{"ancestorTitles":["Token-Limited Search Integration","End-to-End Scenarios"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Token-Limited Search Integration End-to-End Scenarios should handle search with token budget constraint","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle search with token budget constraint"},{"ancestorTitles":["Token-Limited Search Integration","End-to-End Scenarios"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Token-Limited Search Integration End-to-End Scenarios should handle combined maxResults and token budget constraints","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle combined maxResults and token budget constraints"},{"ancestorTitles":["Token-Limited Search Integration","End-to-End Scenarios"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Token-Limited Search Integration End-to-End Scenarios should provide accurate truncation metadata after processing","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should provide accurate truncation metadata after processing"},{"ancestorTitles":["Token-Limited Search Integration","Format Switching Impact"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Token-Limited Search Integration Format Switching Impact should show that detailed format consumes more budget than concise","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should show that detailed format consumes more budget than concise"},{"ancestorTitles":["Token-Limited Search Integration","Format Switching Impact"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Token-Limited Search Integration Format Switching Impact should fit more results in concise mode than detailed mode","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should fit more results in concise mode than detailed mode"},{"ancestorTitles":["Token-Limited Search Integration","Error Handling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Token-Limited Search Integration Error Handling should not throw when adding results within budget","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not throw when adding results within budget"},{"ancestorTitles":["Token-Limited Search Integration","Error Handling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Token-Limited Search Integration Error Handling should gracefully handle empty search results","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should gracefully handle empty search results"}],"endTime":1761861670235,"message":"","name":"/Users/shayon/DevProjects/mcp-for-lifeos/tests/integration/token-limited-search.test.ts","startTime":1761861670195,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Request Handler - Consolidated Registry Integration (MCP-96)","Consolidated execution"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - Consolidated Registry Integration (MCP-96) Consolidated execution returns versioned response for consolidated search tool","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"returns versioned response for consolidated search tool"},{"ancestorTitles":["Request Handler - Consolidated Registry Integration (MCP-96)","Consolidated execution"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - Consolidated Registry Integration (MCP-96) Consolidated execution updates analytics client info when updateClientContext is invoked","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"updates analytics client info when updateClientContext is invoked"},{"ancestorTitles":["Request Handler - Consolidated Registry Integration (MCP-96)","Availability checks"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - Consolidated Registry Integration (MCP-96) Availability checks rejects unknown tools with descriptive error","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"rejects unknown tools with descriptive error"},{"ancestorTitles":["Request Handler - Consolidated Registry Integration (MCP-96)","Availability checks"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - Consolidated Registry Integration (MCP-96) Availability checks blocks consolidated tools in legacy-only mode before lookup","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"blocks consolidated tools in legacy-only mode before lookup"},{"ancestorTitles":["Request Handler - Consolidated Registry Integration (MCP-96)","Availability checks"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Request Handler - Consolidated Registry Integration (MCP-96) Availability checks blocks legacy tools in consolidated-only mode","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"blocks legacy tools in consolidated-only mode"}],"endTime":1761861670283,"message":"","name":"/Users/shayon/DevProjects/mcp-for-lifeos/tests/integration/request-handler-empty-registry.test.ts","startTime":1761861670236,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Legacy Alias Handlers Module","LEGACY_ALIAS_TOOL_NAMES constant"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Module LEGACY_ALIAS_TOOL_NAMES constant should export exactly 11 legacy alias tool names","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should export exactly 11 legacy alias tool names"},{"ancestorTitles":["Legacy Alias Handlers Module","LEGACY_ALIAS_TOOL_NAMES constant"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Module LEGACY_ALIAS_TOOL_NAMES constant should include all search aliases (6 total)","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should include all search aliases (6 total)"},{"ancestorTitles":["Legacy Alias Handlers Module","LEGACY_ALIAS_TOOL_NAMES constant"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Module LEGACY_ALIAS_TOOL_NAMES constant should include template alias","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should include template alias"},{"ancestorTitles":["Legacy Alias Handlers Module","LEGACY_ALIAS_TOOL_NAMES constant"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Module LEGACY_ALIAS_TOOL_NAMES constant should include all list aliases (4 total)","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should include all list aliases (4 total)"},{"ancestorTitles":["Legacy Alias Handlers Module","registerLegacyAliasHandlers()"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Module registerLegacyAliasHandlers() should register all 11 legacy alias handlers into the registry","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should register all 11 legacy alias handlers into the registry"},{"ancestorTitles":["Legacy Alias Handlers Module","registerLegacyAliasHandlers()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Module registerLegacyAliasHandlers() should register handlers for each tool in LEGACY_ALIAS_TOOL_NAMES","invocations":1,"location":null,"numPassingAsserts":22,"retryReasons":[],"status":"passed","title":"should register handlers for each tool in LEGACY_ALIAS_TOOL_NAMES"},{"ancestorTitles":["Legacy Alias Handlers Module","registerLegacyAliasHandlers()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Module registerLegacyAliasHandlers() should support chaining pattern","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should support chaining pattern"},{"ancestorTitles":["Legacy Alias Handlers Module","registerLegacyAliasHandlers()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Module registerLegacyAliasHandlers() should be idempotent (multiple calls don't duplicate handlers)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should be idempotent (multiple calls don't duplicate handlers)"},{"ancestorTitles":["Legacy Alias Handlers Module","getLegacyAliasHandler()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Module getLegacyAliasHandler() should return handler for valid legacy alias tool names","invocations":1,"location":null,"numPassingAsserts":22,"retryReasons":[],"status":"passed","title":"should return handler for valid legacy alias tool names"},{"ancestorTitles":["Legacy Alias Handlers Module","getLegacyAliasHandler()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Module getLegacyAliasHandler() should return undefined for unknown tool names","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return undefined for unknown tool names"},{"ancestorTitles":["Legacy Alias Handlers Module","getLegacyAliasHandler()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Module getLegacyAliasHandler() should return the same handler instance on multiple calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return the same handler instance on multiple calls"},{"ancestorTitles":["Legacy Alias Handlers Module","Mode Guards"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Module Mode Guards should throw error when called in legacy-only mode (search aliases)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should throw error when called in legacy-only mode (search aliases)"},{"ancestorTitles":["Legacy Alias Handlers Module","Mode Guards"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Module Mode Guards should throw error when called in legacy-only mode (template alias)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should throw error when called in legacy-only mode (template alias)"},{"ancestorTitles":["Legacy Alias Handlers Module","Mode Guards"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Module Mode Guards should throw error when called in legacy-only mode (list aliases)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should throw error when called in legacy-only mode (list aliases)"},{"ancestorTitles":["Legacy Alias Handlers Module","Handler Factory Initialization"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Module Handler Factory Initialization should initialize handlers lazily (only on first access)","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should initialize handlers lazily (only on first access)"},{"ancestorTitles":["Legacy Alias Handlers Module","Handler Factory Initialization"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Module Handler Factory Initialization should create separate handler instances for each tool","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should create separate handler instances for each tool"},{"ancestorTitles":["Legacy Alias Handlers Module","Deprecation Warning Generation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Module Deprecation Warning Generation should include deprecation notice in handler response structure","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should include deprecation notice in handler response structure"}],"endTime":1761861670360,"message":"","name":"/Users/shayon/DevProjects/mcp-for-lifeos/tests/unit/server/legacy-alias-handlers.test.ts","startTime":1761861670286,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["DateResolver","resolveDailyNoteDate"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"DateResolver resolveDailyNoteDate should handle \"today\" keyword","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle \"today\" keyword"},{"ancestorTitles":["DateResolver","resolveDailyNoteDate"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"DateResolver resolveDailyNoteDate should handle \"yesterday\" keyword","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle \"yesterday\" keyword"},{"ancestorTitles":["DateResolver","resolveDailyNoteDate"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DateResolver resolveDailyNoteDate should handle \"tomorrow\" keyword","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle \"tomorrow\" keyword"},{"ancestorTitles":["DateResolver","resolveDailyNoteDate"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"DateResolver resolveDailyNoteDate should handle relative date formats","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should handle relative date formats"},{"ancestorTitles":["DateResolver","resolveDailyNoteDate"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"DateResolver resolveDailyNoteDate should handle weekday names","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle weekday names"},{"ancestorTitles":["DateResolver","resolveDailyNoteDate"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"DateResolver resolveDailyNoteDate should handle \"last\" weekday names","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should handle \"last\" weekday names"},{"ancestorTitles":["DateResolver","resolveDailyNoteDate"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DateResolver resolveDailyNoteDate should handle YYYY-MM-DD format","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle YYYY-MM-DD format"},{"ancestorTitles":["DateResolver","resolveDailyNoteDate"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DateResolver resolveDailyNoteDate should handle various date formats","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should handle various date formats"},{"ancestorTitles":["DateResolver","resolveDailyNoteDate"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DateResolver resolveDailyNoteDate should default to today for empty input","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should default to today for empty input"},{"ancestorTitles":["DateResolver","resolveDailyNoteDate"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DateResolver resolveDailyNoteDate should handle invalid dates gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle invalid dates gracefully"},{"ancestorTitles":["DateResolver","resolveDailyNoteDate"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"DateResolver resolveDailyNoteDate should handle ISO date strings","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle ISO date strings"},{"ancestorTitles":["DateResolver","relative date handling through resolveDailyNoteDate"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DateResolver relative date handling through resolveDailyNoteDate should handle positive relative dates","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle positive relative dates"},{"ancestorTitles":["DateResolver","relative date handling through resolveDailyNoteDate"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DateResolver relative date handling through resolveDailyNoteDate should handle negative relative dates","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle negative relative dates"},{"ancestorTitles":["DateResolver","weekday handling through resolveDailyNoteDate"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"DateResolver weekday handling through resolveDailyNoteDate should find next occurrence of weekday","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should find next occurrence of weekday"},{"ancestorTitles":["DateResolver","weekday handling through resolveDailyNoteDate"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DateResolver weekday handling through resolveDailyNoteDate should handle case insensitively","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle case insensitively"},{"ancestorTitles":["DateResolver","timezone handling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"DateResolver timezone handling should use local timezone for date resolution","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use local timezone for date resolution"},{"ancestorTitles":["DateResolver","edge cases"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DateResolver edge cases should handle month boundaries correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle month boundaries correctly"},{"ancestorTitles":["DateResolver","edge cases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"DateResolver edge cases should handle year boundaries correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle year boundaries correctly"},{"ancestorTitles":["DateResolver","edge cases"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DateResolver edge cases should handle leap years correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle leap years correctly"}],"endTime":1761861670409,"message":"","name":"/Users/shayon/DevProjects/mcp-for-lifeos/tests/unit/date-resolver.test.ts","startTime":1761861670362,"status":"focused","summary":""},{"assertionResults":[{"ancestorTitles":["Task Formatting with Obsidian Tasks Plugin","Task Creation Date Formatting"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Task Formatting with Obsidian Tasks Plugin Task Creation Date Formatting should add creation date to tasks without one","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should add creation date to tasks without one"},{"ancestorTitles":["Task Formatting with Obsidian Tasks Plugin","Task Creation Date Formatting"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Task Formatting with Obsidian Tasks Plugin Task Creation Date Formatting should not add creation date to tasks that already have one","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should not add creation date to tasks that already have one"},{"ancestorTitles":["Task Formatting with Obsidian Tasks Plugin","Task Creation Date Formatting"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Task Formatting with Obsidian Tasks Plugin Task Creation Date Formatting should handle multiple tasks correctly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle multiple tasks correctly"},{"ancestorTitles":["Task Formatting with Obsidian Tasks Plugin","Task Creation Date Formatting"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Task Formatting with Obsidian Tasks Plugin Task Creation Date Formatting should not modify non-task list items","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should not modify non-task list items"},{"ancestorTitles":["Task Formatting with Obsidian Tasks Plugin","Task Creation Date Formatting"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Task Formatting with Obsidian Tasks Plugin Task Creation Date Formatting should work with daily note task workflow","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should work with daily note task workflow"},{"ancestorTitles":["Task Formatting with Obsidian Tasks Plugin","Task Properties Formatting"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Task Formatting with Obsidian Tasks Plugin Task Properties Formatting should maintain other task properties when adding creation date","invocations":1,"location":null,"numPassingAsserts":17,"retryReasons":[],"status":"passed","title":"should maintain other task properties when adding creation date"}],"endTime":1761861670461,"message":"","name":"/Users/shayon/DevProjects/mcp-for-lifeos/tests/unit/task-formatting.test.ts","startTime":1761861670411,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ResponseTruncator","Constructor and Initialization"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator Constructor and Initialization should create with default configuration","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should create with default configuration"},{"ancestorTitles":["ResponseTruncator","Constructor and Initialization"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator Constructor and Initialization should create with custom configuration","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should create with custom configuration"},{"ancestorTitles":["ResponseTruncator","Constructor and Initialization"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator Constructor and Initialization should merge custom config with defaults","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should merge custom config with defaults"},{"ancestorTitles":["ResponseTruncator","Constructor and Initialization"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator Constructor and Initialization should validate configuration on creation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate configuration on creation"},{"ancestorTitles":["ResponseTruncator","Budget Tracking"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator Budget Tracking should track remaining budget correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should track remaining budget correctly"},{"ancestorTitles":["ResponseTruncator","Budget Tracking"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator Budget Tracking should never return negative remaining budget","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should never return negative remaining budget"},{"ancestorTitles":["ResponseTruncator","Budget Tracking"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator Budget Tracking should accumulate consumed budget across multiple calls","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should accumulate consumed budget across multiple calls"},{"ancestorTitles":["ResponseTruncator","Budget Tracking"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator Budget Tracking should reset budget to initial state","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should reset budget to initial state"},{"ancestorTitles":["ResponseTruncator","canAddResult()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator canAddResult() should return true when result fits within budget","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return true when result fits within budget"},{"ancestorTitles":["ResponseTruncator","canAddResult()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator canAddResult() should return false when result exceeds budget","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return false when result exceeds budget"},{"ancestorTitles":["ResponseTruncator","canAddResult()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator canAddResult() should return true when result exactly fits budget","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return true when result exactly fits budget"},{"ancestorTitles":["ResponseTruncator","canAddResult()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator canAddResult() should account for already consumed budget","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should account for already consumed budget"},{"ancestorTitles":["ResponseTruncator","canAddResult()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator canAddResult() should handle empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle empty string"},{"ancestorTitles":["ResponseTruncator","consumeBudget()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator consumeBudget() should consume budget for valid result","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should consume budget for valid result"},{"ancestorTitles":["ResponseTruncator","consumeBudget()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator consumeBudget() should throw error when result would exceed budget","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error when result would exceed budget"},{"ancestorTitles":["ResponseTruncator","consumeBudget()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator consumeBudget() should throw error with accurate exceeded amount","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error with accurate exceeded amount"},{"ancestorTitles":["ResponseTruncator","consumeBudget()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator consumeBudget() should not modify budget if consumption throws","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not modify budget if consumption throws"},{"ancestorTitles":["ResponseTruncator","consumeBudget()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator consumeBudget() should handle empty string without error","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle empty string without error"},{"ancestorTitles":["ResponseTruncator","estimateTokens()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator estimateTokens() should estimate tokens using configured ratio","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should estimate tokens using configured ratio"},{"ancestorTitles":["ResponseTruncator","estimateTokens()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator estimateTokens() should round up fractional tokens","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should round up fractional tokens"},{"ancestorTitles":["ResponseTruncator","estimateTokens()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator estimateTokens() should handle custom estimation ratios","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle custom estimation ratios"},{"ancestorTitles":["ResponseTruncator","estimateTokens()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator estimateTokens() should handle empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle empty string"},{"ancestorTitles":["ResponseTruncator","estimateTokens()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator estimateTokens() should handle unicode characters correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle unicode characters correctly"},{"ancestorTitles":["ResponseTruncator","getTruncationInfo()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator getTruncationInfo() should generate metadata when not truncated","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should generate metadata when not truncated"},{"ancestorTitles":["ResponseTruncator","getTruncationInfo()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator getTruncationInfo() should generate metadata when truncated by token budget","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should generate metadata when truncated by token budget"},{"ancestorTitles":["ResponseTruncator","getTruncationInfo()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator getTruncationInfo() should include standard suggestion message","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should include standard suggestion message"},{"ancestorTitles":["ResponseTruncator","getTruncationInfo()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator getTruncationInfo() should include auto-downgrade suggestion when applicable","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should include auto-downgrade suggestion when applicable"},{"ancestorTitles":["ResponseTruncator","getTruncationInfo()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator getTruncationInfo() should calculate estimated tokens correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should calculate estimated tokens correctly"},{"ancestorTitles":["ResponseTruncator","getTruncationInfo()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator getTruncationInfo() should set limitType to \"token\" when token was constraint","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should set limitType to \"token\" when token was constraint"},{"ancestorTitles":["ResponseTruncator","Edge Cases and Boundary Conditions"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator Edge Cases and Boundary Conditions should handle maxResults=1 (minimum)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle maxResults=1 (minimum)"},{"ancestorTitles":["ResponseTruncator","Edge Cases and Boundary Conditions"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator Edge Cases and Boundary Conditions should handle maxResults=100 (maximum)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle maxResults=100 (maximum)"},{"ancestorTitles":["ResponseTruncator","Edge Cases and Boundary Conditions"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator Edge Cases and Boundary Conditions should handle single result exceeding budget","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle single result exceeding budget"},{"ancestorTitles":["ResponseTruncator","Edge Cases and Boundary Conditions"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator Edge Cases and Boundary Conditions should handle exactly at budget boundary","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle exactly at budget boundary"},{"ancestorTitles":["ResponseTruncator","Factory Functions"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator Factory Functions should create default truncator via factory","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should create default truncator via factory"},{"ancestorTitles":["ResponseTruncator","Factory Functions"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ResponseTruncator Factory Functions should create custom truncator via factory","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should create custom truncator via factory"},{"ancestorTitles":["Configuration Validation","validateTokenBudgetConfig()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Configuration Validation validateTokenBudgetConfig() should accept valid configuration","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should accept valid configuration"},{"ancestorTitles":["Configuration Validation","validateTokenBudgetConfig()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Configuration Validation validateTokenBudgetConfig() should reject negative maxTokens","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject negative maxTokens"},{"ancestorTitles":["Configuration Validation","validateTokenBudgetConfig()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Configuration Validation validateTokenBudgetConfig() should reject zero maxTokens","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject zero maxTokens"},{"ancestorTitles":["Configuration Validation","validateTokenBudgetConfig()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Configuration Validation validateTokenBudgetConfig() should reject negative maxCharacters","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject negative maxCharacters"},{"ancestorTitles":["Configuration Validation","validateTokenBudgetConfig()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Configuration Validation validateTokenBudgetConfig() should reject negative estimationRatio","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject negative estimationRatio"},{"ancestorTitles":["Configuration Validation","validateTokenBudgetConfig()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Configuration Validation validateTokenBudgetConfig() should reject inconsistent maxCharacters and maxTokens","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reject inconsistent maxCharacters and maxTokens"},{"ancestorTitles":["Configuration Validation","validateTokenBudgetConfig()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Configuration Validation validateTokenBudgetConfig() should allow reasonable tolerance in consistency check","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should allow reasonable tolerance in consistency check"},{"ancestorTitles":["Configuration Validation","validateMaxResults()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Configuration Validation validateMaxResults() should return default for undefined value (search)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return default for undefined value (search)"},{"ancestorTitles":["Configuration Validation","validateMaxResults()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Configuration Validation validateMaxResults() should return default for undefined value (list)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return default for undefined value (list)"},{"ancestorTitles":["Configuration Validation","validateMaxResults()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Configuration Validation validateMaxResults() should return default for undefined value (yaml_properties)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return default for undefined value (yaml_properties)"},{"ancestorTitles":["Configuration Validation","validateMaxResults()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Configuration Validation validateMaxResults() should accept valid value within range","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should accept valid value within range"},{"ancestorTitles":["Configuration Validation","validateMaxResults()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Configuration Validation validateMaxResults() should constrain value below minimum","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should constrain value below minimum"},{"ancestorTitles":["Configuration Validation","validateMaxResults()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Configuration Validation validateMaxResults() should constrain value above maximum","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should constrain value above maximum"},{"ancestorTitles":["Configuration Validation","validateMaxResults()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Configuration Validation validateMaxResults() should constrain negative values","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should constrain negative values"},{"ancestorTitles":["Real-World Scenarios","Incremental Result Accumulation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Real-World Scenarios Incremental Result Accumulation should simulate typical search result accumulation","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should simulate typical search result accumulation"},{"ancestorTitles":["Real-World Scenarios","Incremental Result Accumulation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Real-World Scenarios Incremental Result Accumulation should handle very large result that fits exactly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle very large result that fits exactly"},{"ancestorTitles":["Real-World Scenarios","Incremental Result Accumulation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Real-World Scenarios Incremental Result Accumulation should prevent adding second result after budget consumed","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should prevent adding second result after budget consumed"},{"ancestorTitles":["Real-World Scenarios","Performance Characteristics"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Real-World Scenarios Performance Characteristics should handle character estimation efficiently","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle character estimation efficiently"},{"ancestorTitles":["Real-World Scenarios","Performance Characteristics"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Real-World Scenarios Performance Characteristics should track budget for many small results efficiently","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should track budget for many small results efficiently"}],"endTime":1761861670505,"message":"","name":"/Users/shayon/DevProjects/mcp-for-lifeos/tests/unit/response-truncator.test.ts","startTime":1761861670462,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Claude Desktop Integration (Direct)","Core MCP-61 Test: No Production Vault Pollution"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Claude Desktop Integration (Direct) Core MCP-61 Test: No Production Vault Pollution should create notes ONLY in temp vault, never in production","invocations":1,"location":null,"numPassingAsserts":16,"retryReasons":[],"status":"passed","title":"should create notes ONLY in temp vault, never in production"},{"ancestorTitles":["Claude Desktop Integration (Direct)","Vault Isolation Verification"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Claude Desktop Integration (Direct) Vault Isolation Verification should read/write/search only in temp vault","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should read/write/search only in temp vault"},{"ancestorTitles":["Claude Desktop Integration (Direct)","Config Override Verification"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Claude Desktop Integration (Direct) Config Override Verification should use temp vault paths from LIFEOS_CONFIG","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should use temp vault paths from LIFEOS_CONFIG"},{"ancestorTitles":["Claude Desktop Integration (Direct)","Cleanup Verification"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Claude Desktop Integration (Direct) Cleanup Verification should clean up temp vault in afterEach","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should clean up temp vault in afterEach"}],"endTime":1761861670557,"message":"","name":"/Users/shayon/DevProjects/mcp-for-lifeos/tests/integration/claude-desktop-integration.test.ts","startTime":1761861670508,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Priority 1: Frontmatter title field"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Priority 1: Frontmatter title field should prioritize frontmatter.title when provided and non-empty","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should prioritize frontmatter.title when provided and non-empty"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Priority 1: Frontmatter title field"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Priority 1: Frontmatter title field should use frontmatter.title even for daily note filenames","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use frontmatter.title even for daily note filenames"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Priority 1: Frontmatter title field"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Priority 1: Frontmatter title field should handle frontmatter with Record<string, any> type","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle frontmatter with Record<string, any> type"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Priority 1: Frontmatter title field"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Priority 1: Frontmatter title field should ignore empty string frontmatter.title","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should ignore empty string frontmatter.title"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Priority 1: Frontmatter title field"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Priority 1: Frontmatter title field should ignore whitespace-only frontmatter.title","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should ignore whitespace-only frontmatter.title"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Priority 1: Frontmatter title field"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Priority 1: Frontmatter title field should handle non-string frontmatter.title","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle non-string frontmatter.title"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Priority 2: Daily note date formatting (YYYY-MM-DD)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Priority 2: Daily note date formatting (YYYY-MM-DD) should format daily notes as \"Month DD, YYYY\"","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should format daily notes as \"Month DD, YYYY\""},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Priority 2: Daily note date formatting (YYYY-MM-DD)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Priority 2: Daily note date formatting (YYYY-MM-DD) should handle timezone correctly - MCP-31 FIX (parseISO vs new Date)","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should handle timezone correctly - MCP-31 FIX (parseISO vs new Date)"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Priority 2: Daily note date formatting (YYYY-MM-DD)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Priority 2: Daily note date formatting (YYYY-MM-DD) should handle leap year daily notes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle leap year daily notes"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Priority 2: Daily note date formatting (YYYY-MM-DD)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Priority 2: Daily note date formatting (YYYY-MM-DD) should handle daily notes without frontmatter parameter","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle daily notes without frontmatter parameter"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Priority 2: Daily note date formatting (YYYY-MM-DD)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Priority 2: Daily note date formatting (YYYY-MM-DD) should handle daily notes with empty frontmatter object","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle daily notes with empty frontmatter object"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Priority 2: Daily note date formatting (YYYY-MM-DD)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Priority 2: Daily note date formatting (YYYY-MM-DD) should only match YYYY-MM-DD format exactly","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should only match YYYY-MM-DD format exactly"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Priority 3: Title-cased filename transformation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Priority 3: Title-cased filename transformation should transform dashes to spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should transform dashes to spaces"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Priority 3: Title-cased filename transformation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Priority 3: Title-cased filename transformation should transform underscores to spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should transform underscores to spaces"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Priority 3: Title-cased filename transformation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Priority 3: Title-cased filename transformation should transform mixed dashes and underscores","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should transform mixed dashes and underscores"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Priority 3: Title-cased filename transformation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Priority 3: Title-cased filename transformation should apply title case to each word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should apply title case to each word"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Priority 3: Title-cased filename transformation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Priority 3: Title-cased filename transformation should handle single word filenames","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle single word filenames"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Priority 3: Title-cased filename transformation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Priority 3: Title-cased filename transformation should handle filenames with numbers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle filenames with numbers"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Priority 3: Title-cased filename transformation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Priority 3: Title-cased filename transformation should remove .md extension","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should remove .md extension"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Edge Cases and Error Handling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Edge Cases and Error Handling should handle missing frontmatter parameter (undefined)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle missing frontmatter parameter (undefined)"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Edge Cases and Error Handling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Edge Cases and Error Handling should handle null frontmatter","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle null frontmatter"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Edge Cases and Error Handling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Edge Cases and Error Handling should handle frontmatter without title field","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle frontmatter without title field"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Edge Cases and Error Handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Edge Cases and Error Handling should handle absolute paths","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle absolute paths"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Edge Cases and Error Handling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Edge Cases and Error Handling should handle relative paths","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle relative paths"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Edge Cases and Error Handling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Edge Cases and Error Handling should handle paths without extension","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle paths without extension"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Edge Cases and Error Handling"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Edge Cases and Error Handling should handle empty filename (edge case)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle empty filename (edge case)"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Edge Cases and Error Handling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Edge Cases and Error Handling should handle paths with multiple dots","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle paths with multiple dots"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Backward Compatibility"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Backward Compatibility should work without frontmatter parameter (original signature)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should work without frontmatter parameter (original signature)"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Backward Compatibility"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Backward Compatibility should work with frontmatter parameter (enhanced signature)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should work with frontmatter parameter (enhanced signature)"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Real-World Scenarios"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Real-World Scenarios should handle typical daily note without custom title","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle typical daily note without custom title"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Real-World Scenarios"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Real-World Scenarios should handle project note with custom title","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle project note with custom title"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Real-World Scenarios"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Real-World Scenarios should handle article note with title","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle article note with title"},{"ancestorTitles":["ObsidianLinks.extractNoteTitle()","Real-World Scenarios"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ObsidianLinks.extractNoteTitle() Real-World Scenarios should handle meeting note without custom title","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle meeting note without custom title"}],"endTime":1761861670601,"message":"","name":"/Users/shayon/DevProjects/mcp-for-lifeos/tests/unit/obsidian-links.test.ts","startTime":1761861670558,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["JSONL Analytics Final Validation","Production File Analysis"],"duration":24,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Final Validation Production File Analysis should validate existing JSONL file structure","invocations":1,"location":null,"numPassingAsserts":1002,"retryReasons":[],"status":"passed","title":"should validate existing JSONL file structure"},{"ancestorTitles":["JSONL Analytics Final Validation","Production File Analysis"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Final Validation Production File Analysis should verify backward compatibility with JSON format","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should verify backward compatibility with JSON format"},{"ancestorTitles":["JSONL Analytics Final Validation","Instance Identification"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Final Validation Instance Identification should generate unique instance IDs for each server start","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should generate unique instance IDs for each server start"},{"ancestorTitles":["JSONL Analytics Final Validation","Concurrent Safety"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Final Validation Concurrent Safety should validate no data corruption in production JSONL file","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate no data corruption in production JSONL file"},{"ancestorTitles":["JSONL Analytics Final Validation","Concurrent Safety"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Final Validation Concurrent Safety should verify atomicity of recent writes","invocations":1,"location":null,"numPassingAsserts":21,"retryReasons":[],"status":"passed","title":"should verify atomicity of recent writes"},{"ancestorTitles":["JSONL Analytics Final Validation","Performance Characteristics"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Final Validation Performance Characteristics should measure append performance on actual analytics file","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should measure append performance on actual analytics file"},{"ancestorTitles":["JSONL Analytics Final Validation","Performance Characteristics"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"JSONL Analytics Final Validation Performance Characteristics should measure file size growth characteristics","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should measure file size growth characteristics"}],"endTime":1761861670646,"message":"","name":"/Users/shayon/DevProjects/mcp-for-lifeos/tests/integration/jsonl-final-validation.test.ts","startTime":1761861670603,"status":"focused","summary":""},{"assertionResults":[{"ancestorTitles":["path-utils","MD_EXTENSION_REGEX constant"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils MD_EXTENSION_REGEX constant should match .md extension at end of string","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should match .md extension at end of string"},{"ancestorTitles":["path-utils","MD_EXTENSION_REGEX constant"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"path-utils MD_EXTENSION_REGEX constant should not match .md in middle of filename","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should not match .md in middle of filename"},{"ancestorTitles":["path-utils","MD_EXTENSION_REGEX constant"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils MD_EXTENSION_REGEX constant should match only final .md in double extension","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should match only final .md in double extension"},{"ancestorTitles":["path-utils","stripMdExtension","basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils stripMdExtension basic functionality should strip .md extension from filename","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should strip .md extension from filename"},{"ancestorTitles":["path-utils","stripMdExtension","basic functionality"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils stripMdExtension basic functionality should return filename unchanged when no .md extension","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return filename unchanged when no .md extension"},{"ancestorTitles":["path-utils","stripMdExtension","edge cases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils stripMdExtension edge cases should handle empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle empty string"},{"ancestorTitles":["path-utils","stripMdExtension","edge cases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils stripMdExtension edge cases should strip only final .md from double extension","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should strip only final .md from double extension"},{"ancestorTitles":["path-utils","stripMdExtension","edge cases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils stripMdExtension edge cases should preserve .md in middle of filename","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should preserve .md in middle of filename"},{"ancestorTitles":["path-utils","stripMdExtension","edge cases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils stripMdExtension edge cases should not strip non-.md extensions","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should not strip non-.md extensions"},{"ancestorTitles":["path-utils","stripMdExtension","edge cases"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"path-utils stripMdExtension edge cases should handle multiple dots in filename","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle multiple dots in filename"},{"ancestorTitles":["path-utils","stripMdExtension","path preservation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils stripMdExtension path preservation should preserve relative directory paths","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should preserve relative directory paths"},{"ancestorTitles":["path-utils","stripMdExtension","path preservation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils stripMdExtension path preservation should preserve absolute directory paths","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should preserve absolute directory paths"},{"ancestorTitles":["path-utils","stripMdExtension","path preservation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils stripMdExtension path preservation should preserve paths with multiple dots","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should preserve paths with multiple dots"},{"ancestorTitles":["path-utils","stripMdExtension","path preservation"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils stripMdExtension path preservation should handle paths with no extension","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle paths with no extension"},{"ancestorTitles":["path-utils","stripMdExtension","pure function behavior"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"path-utils stripMdExtension pure function behavior should not modify input parameter","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not modify input parameter"},{"ancestorTitles":["path-utils","stripMdExtension","pure function behavior"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils stripMdExtension pure function behavior should return consistent results for same input","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return consistent results for same input"},{"ancestorTitles":["path-utils","stripMdExtension","pure function behavior"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils stripMdExtension pure function behavior should work with const inputs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should work with const inputs"},{"ancestorTitles":["path-utils","stripMdExtension","real-world use cases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils stripMdExtension real-world use cases should handle daily note filenames","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle daily note filenames"},{"ancestorTitles":["path-utils","stripMdExtension","real-world use cases"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"path-utils stripMdExtension real-world use cases should handle template filenames","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle template filenames"},{"ancestorTitles":["path-utils","stripMdExtension","real-world use cases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils stripMdExtension real-world use cases should handle vault paths","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle vault paths"},{"ancestorTitles":["path-utils","stripMdExtension","real-world use cases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils stripMdExtension real-world use cases should handle special characters in filenames","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle special characters in filenames"},{"ancestorTitles":["path-utils","normalizePath","absolute path handling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath absolute path handling should return absolute POSIX path as-is","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return absolute POSIX path as-is"},{"ancestorTitles":["path-utils","normalizePath","absolute path handling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath absolute path handling should return absolute Windows path as-is (Windows only)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return absolute Windows path as-is (Windows only)"},{"ancestorTitles":["path-utils","normalizePath","absolute path handling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath absolute path handling should return UNC network path as-is (Windows only)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return UNC network path as-is (Windows only)"},{"ancestorTitles":["path-utils","normalizePath","absolute path handling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath absolute path handling should not modify absolute paths regardless of basePath","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should not modify absolute paths regardless of basePath"},{"ancestorTitles":["path-utils","normalizePath","relative path handling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath relative path handling should join relative POSIX path with basePath","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should join relative POSIX path with basePath"},{"ancestorTitles":["path-utils","normalizePath","relative path handling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath relative path handling should join relative Windows path with basePath","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should join relative Windows path with basePath"},{"ancestorTitles":["path-utils","normalizePath","relative path handling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath relative path handling should handle simple relative paths","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle simple relative paths"},{"ancestorTitles":["path-utils","normalizePath","cross-platform path detection"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath cross-platform path detection should correctly identify POSIX absolute paths","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should correctly identify POSIX absolute paths"},{"ancestorTitles":["path-utils","normalizePath","cross-platform path detection"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath cross-platform path detection should correctly identify Windows absolute paths","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should correctly identify Windows absolute paths"},{"ancestorTitles":["path-utils","normalizePath","cross-platform path detection"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath cross-platform path detection should correctly identify relative paths","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should correctly identify relative paths"},{"ancestorTitles":["path-utils","normalizePath","path traversal edge cases"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath path traversal edge cases should handle path traversal attempts","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle path traversal attempts"},{"ancestorTitles":["path-utils","normalizePath","path traversal edge cases"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath path traversal edge cases should preserve path traversal in relative paths","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should preserve path traversal in relative paths"},{"ancestorTitles":["path-utils","normalizePath","real-world vault scenarios"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath real-world vault scenarios should handle absolute dailyNotesPath from LIFEOS_CONFIG","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle absolute dailyNotesPath from LIFEOS_CONFIG"},{"ancestorTitles":["path-utils","normalizePath","real-world vault scenarios"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath real-world vault scenarios should handle relative template inference paths","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle relative template inference paths"},{"ancestorTitles":["path-utils","normalizePath","real-world vault scenarios"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath real-world vault scenarios should handle relative user input paths","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle relative user input paths"},{"ancestorTitles":["path-utils","normalizePath","real-world vault scenarios"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath real-world vault scenarios should handle paths with spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle paths with spaces"},{"ancestorTitles":["path-utils","normalizePath","pure function behavior"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath pure function behavior should not modify input parameters","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should not modify input parameters"},{"ancestorTitles":["path-utils","normalizePath","pure function behavior"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath pure function behavior should return consistent results for same input","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return consistent results for same input"},{"ancestorTitles":["path-utils","normalizePath","pure function behavior"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath pure function behavior should be deterministic","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should be deterministic"},{"ancestorTitles":["path-utils","normalizePath","no I/O operations"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath no I/O operations should not check if paths exist","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should not check if paths exist"},{"ancestorTitles":["path-utils","normalizePath","no I/O operations"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath no I/O operations should work with invalid paths","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should work with invalid paths"},{"ancestorTitles":["path-utils","normalizePath","escaped space handling (MCP-64)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath escaped space handling (MCP-64) should convert escaped spaces to regular spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should convert escaped spaces to regular spaces"},{"ancestorTitles":["path-utils","normalizePath","escaped space handling (MCP-64)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath escaped space handling (MCP-64) should handle multiple escaped spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle multiple escaped spaces"},{"ancestorTitles":["path-utils","normalizePath","escaped space handling (MCP-64)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath escaped space handling (MCP-64) should handle escaped spaces in absolute paths","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle escaped spaces in absolute paths"},{"ancestorTitles":["path-utils","normalizePath","escaped space handling (MCP-64)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath escaped space handling (MCP-64) should preserve regular spaces (non-escaped)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should preserve regular spaces (non-escaped)"},{"ancestorTitles":["path-utils","normalizePath","escaped space handling (MCP-64)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath escaped space handling (MCP-64) should handle CLI compatibility scenario","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle CLI compatibility scenario"},{"ancestorTitles":["path-utils","normalizePath","escaped space handling (MCP-64)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath escaped space handling (MCP-64) should not affect paths without escaped spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not affect paths without escaped spaces"},{"ancestorTitles":["path-utils","normalizePath","path traversal validation (MCP-64)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath path traversal validation (MCP-64) should allow paths within vault when validation disabled (default)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should allow paths within vault when validation disabled (default)"},{"ancestorTitles":["path-utils","normalizePath","path traversal validation (MCP-64)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath path traversal validation (MCP-64) should allow paths within vault when validation enabled","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should allow paths within vault when validation enabled"},{"ancestorTitles":["path-utils","normalizePath","path traversal validation (MCP-64)"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath path traversal validation (MCP-64) should throw error for path traversal when validation enabled","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error for path traversal when validation enabled"},{"ancestorTitles":["path-utils","normalizePath","path traversal validation (MCP-64)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath path traversal validation (MCP-64) should throw error for absolute path outside vault when validation enabled","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error for absolute path outside vault when validation enabled"},{"ancestorTitles":["path-utils","normalizePath","path traversal validation (MCP-64)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath path traversal validation (MCP-64) should allow path traversal when validation disabled (default)","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should allow path traversal when validation disabled (default)"},{"ancestorTitles":["path-utils","normalizePath","path traversal validation (MCP-64)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath path traversal validation (MCP-64) should provide detailed error message for path traversal","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should provide detailed error message for path traversal"},{"ancestorTitles":["path-utils","normalizePath","path traversal validation (MCP-64)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath path traversal validation (MCP-64) should handle vault root path correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle vault root path correctly"},{"ancestorTitles":["path-utils","normalizePath","path traversal validation (MCP-64)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath path traversal validation (MCP-64) should handle current directory reference","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle current directory reference"},{"ancestorTitles":["path-utils","normalizePath","path traversal validation (MCP-64)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath path traversal validation (MCP-64) should detect sibling directory attack with absolute path","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should detect sibling directory attack with absolute path"},{"ancestorTitles":["path-utils","normalizePath","path traversal validation (MCP-64)"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath path traversal validation (MCP-64) should detect vault prefix attack without separator","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should detect vault prefix attack without separator"},{"ancestorTitles":["path-utils","normalizePath","combined features (MCP-64)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath combined features (MCP-64) should handle escaped spaces with path traversal validation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle escaped spaces with path traversal validation"},{"ancestorTitles":["path-utils","normalizePath","combined features (MCP-64)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath combined features (MCP-64) should detect traversal even with escaped spaces","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should detect traversal even with escaped spaces"},{"ancestorTitles":["path-utils","normalizePath","combined features (MCP-64)"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"path-utils normalizePath combined features (MCP-64) should handle complex real-world path with all features","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle complex real-world path with all features"}],"endTime":1761861670684,"message":"","name":"/Users/shayon/DevProjects/mcp-for-lifeos/tests/unit/path-utils.test.ts","startTime":1761861670648,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Legacy Alias Handlers Integration","Search Alias Parameter Mapping"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Integration Search Alias Parameter Mapping search_by_content_type should map contentType to query parameter","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"search_by_content_type should map contentType to query parameter"},{"ancestorTitles":["Legacy Alias Handlers Integration","Search Alias Parameter Mapping"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Integration Search Alias Parameter Mapping find_notes_by_pattern should map pattern to query parameter","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"find_notes_by_pattern should map pattern to query parameter"},{"ancestorTitles":["Legacy Alias Handlers Integration","Search Alias Parameter Mapping"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Integration Search Alias Parameter Mapping search_notes should use advanced mode","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"search_notes should use advanced mode"},{"ancestorTitles":["Legacy Alias Handlers Integration","Search Alias Parameter Mapping"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Integration Search Alias Parameter Mapping quick_search should use quick mode","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"quick_search should use quick mode"},{"ancestorTitles":["Legacy Alias Handlers Integration","Search Alias Parameter Mapping"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Integration Search Alias Parameter Mapping search_recent should use recent mode","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"search_recent should use recent mode"},{"ancestorTitles":["Legacy Alias Handlers Integration","List Alias Parameter Mapping"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Integration List Alias Parameter Mapping list_folders should map path parameter","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"list_folders should map path parameter"},{"ancestorTitles":["Legacy Alias Handlers Integration","List Alias Parameter Mapping"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Integration List Alias Parameter Mapping list_daily_notes should map limit parameter","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"list_daily_notes should map limit parameter"},{"ancestorTitles":["Legacy Alias Handlers Integration","List Alias Parameter Mapping"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Integration List Alias Parameter Mapping list_yaml_properties should map all parameters","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"list_yaml_properties should map all parameters"},{"ancestorTitles":["Legacy Alias Handlers Integration","Template Alias Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Integration Template Alias Integration create_note_from_template should set auto_template to false","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"create_note_from_template should set auto_template to false"},{"ancestorTitles":["Legacy Alias Handlers Integration","Deprecation Warning Presence"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Integration Deprecation Warning Presence search aliases should include deprecation warning in response","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"search aliases should include deprecation warning in response"},{"ancestorTitles":["Legacy Alias Handlers Integration","Deprecation Warning Presence"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Integration Deprecation Warning Presence template alias should include deprecation warning in response","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"template alias should include deprecation warning in response"},{"ancestorTitles":["Legacy Alias Handlers Integration","Deprecation Warning Presence"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Integration Deprecation Warning Presence list aliases should include deprecation warning in response","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"list aliases should include deprecation warning in response"},{"ancestorTitles":["Legacy Alias Handlers Integration","Version Metadata Integration"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Legacy Alias Handlers Integration Version Metadata Integration should include version metadata when enabled in registry config","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should include version metadata when enabled in registry config"}],"endTime":1761861670726,"message":"","name":"/Users/shayon/DevProjects/mcp-for-lifeos/tests/integration/legacy-alias-handlers.test.ts","startTime":1761861670686,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["TemplateManager","getTemplateNames"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"TemplateManager getTemplateNames should return template names from cache when valid","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return template names from cache when valid"},{"ancestorTitles":["TemplateManager","getTemplateNames"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"TemplateManager getTemplateNames should refresh cache when expired","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should refresh cache when expired"},{"ancestorTitles":["TemplateManager","getTemplateNames"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"TemplateManager getTemplateNames should handle missing template folder gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle missing template folder gracefully"},{"ancestorTitles":["TemplateManager","getTemplate"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"TemplateManager getTemplate should load template content from file","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should load template content from file"},{"ancestorTitles":["TemplateManager","getTemplate"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"TemplateManager getTemplate should return null for non-existent template","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return null for non-existent template"},{"ancestorTitles":["TemplateManager","getTemplate"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"TemplateManager getTemplate should handle template with .md extension","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle template with .md extension"},{"ancestorTitles":["TemplateManager","getDailyNoteTemplate"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"TemplateManager getDailyNoteTemplate should return daily note template name from settings","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return daily note template name from settings"},{"ancestorTitles":["TemplateManager","getDailyNoteTemplate"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"TemplateManager getDailyNoteTemplate should return null when no template configured","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return null when no template configured"},{"ancestorTitles":["TemplateManager","processTemplate"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"TemplateManager processTemplate should process template with context","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should process template with context"},{"ancestorTitles":["TemplateManager","processTemplate"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"TemplateManager processTemplate should return null for non-existent template","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return null for non-existent template"},{"ancestorTitles":["TemplateManager","caching behavior"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"TemplateManager caching behavior should reuse cache within expiry period","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should reuse cache within expiry period"},{"ancestorTitles":["TemplateManager","caching behavior"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"TemplateManager caching behavior should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"}],"endTime":1761861670765,"message":"","name":"/Users/shayon/DevProjects/mcp-for-lifeos/tests/unit/template-manager.test.ts","startTime":1761861670728,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["DateResolver - Timezone Edge Cases","midnight boundary crossing"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"DateResolver - Timezone Edge Cases midnight boundary crossing should handle \"today\" correctly near midnight UTC","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should handle \"today\" correctly near midnight UTC"},{"ancestorTitles":["DateResolver - Timezone Edge Cases","midnight boundary crossing"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DateResolver - Timezone Edge Cases midnight boundary crossing should handle \"today\" correctly just after midnight UTC","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should handle \"today\" correctly just after midnight UTC"},{"ancestorTitles":["DateResolver - Timezone Edge Cases","DST transitions"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DateResolver - Timezone Edge Cases DST transitions should handle spring forward DST transition","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle spring forward DST transition"},{"ancestorTitles":["DateResolver - Timezone Edge Cases","DST transitions"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"DateResolver - Timezone Edge Cases DST transitions should handle fall back DST transition","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle fall back DST transition"},{"ancestorTitles":["DateResolver - Timezone Edge Cases","extreme timezone differences"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DateResolver - Timezone Edge Cases extreme timezone differences should handle Pacific/Kiritimati (UTC+14)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle Pacific/Kiritimati (UTC+14)"},{"ancestorTitles":["DateResolver - Timezone Edge Cases","extreme timezone differences"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DateResolver - Timezone Edge Cases extreme timezone differences should handle Pacific/Midway (UTC-11)","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle Pacific/Midway (UTC-11)"},{"ancestorTitles":["DateResolver - Timezone Edge Cases","user scenario simulations"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"DateResolver - Timezone Edge Cases user scenario simulations should handle late night work session in EST","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle late night work session in EST"},{"ancestorTitles":["DateResolver - Timezone Edge Cases","user scenario simulations"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DateResolver - Timezone Edge Cases user scenario simulations should handle morning work session in various timezones","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle morning work session in various timezones"},{"ancestorTitles":["DateResolver - Timezone Edge Cases","relative dates across timezone boundaries"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"DateResolver - Timezone Edge Cases relative dates across timezone boundaries should calculate \"yesterday\" correctly across timezones","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should calculate \"yesterday\" correctly across timezones"},{"ancestorTitles":["DateResolver - Timezone Edge Cases","relative dates across timezone boundaries"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DateResolver - Timezone Edge Cases relative dates across timezone boundaries should calculate relative offsets correctly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should calculate relative offsets correctly"}],"endTime":1761861670801,"message":"","name":"/Users/shayon/DevProjects/mcp-for-lifeos/tests/unit/date-resolver-timezone.test.ts","startTime":1761861670767,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Tool Registry","getConsolidatedTools()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Tool Registry getConsolidatedTools() should return exactly 3 consolidated tools","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return exactly 3 consolidated tools"},{"ancestorTitles":["Tool Registry","getConsolidatedTools()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Tool Registry getConsolidatedTools() should have valid tool structure","invocations":1,"location":null,"numPassingAsserts":18,"retryReasons":[],"status":"passed","title":"should have valid tool structure"},{"ancestorTitles":["Tool Registry","getLegacyTools()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Tool Registry getLegacyTools() should return exactly 11 legacy tools","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return exactly 11 legacy tools"},{"ancestorTitles":["Tool Registry","getLegacyTools()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Tool Registry getLegacyTools() should not have deprecation notices in descriptions","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"status":"passed","title":"should not have deprecation notices in descriptions"},{"ancestorTitles":["Tool Registry","getLegacyAliases()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Tool Registry getLegacyAliases() should return exactly 11 legacy aliases","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return exactly 11 legacy aliases"},{"ancestorTitles":["Tool Registry","getLegacyAliases()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Tool Registry getLegacyAliases() should have deprecation notices in descriptions","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"status":"passed","title":"should have deprecation notices in descriptions"},{"ancestorTitles":["Tool Registry","getLegacyAliases()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Tool Registry getLegacyAliases() should share schemas with legacy tools","invocations":1,"location":null,"numPassingAsserts":23,"retryReasons":[],"status":"passed","title":"should share schemas with legacy tools"},{"ancestorTitles":["Tool Registry","getAlwaysAvailableTools()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Tool Registry getAlwaysAvailableTools() should return exactly 9 always-available tools","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return exactly 9 always-available tools"},{"ancestorTitles":["Tool Registry","getAlwaysAvailableTools()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Tool Registry getAlwaysAvailableTools() should include core tools","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should include core tools"},{"ancestorTitles":["Tool Registry","getToolsForMode()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Tool Registry getToolsForMode() should return 12 tools for consolidated-only mode","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return 12 tools for consolidated-only mode"},{"ancestorTitles":["Tool Registry","getToolsForMode()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Tool Registry getToolsForMode() should return 20 tools for legacy-only mode","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return 20 tools for legacy-only mode"},{"ancestorTitles":["Tool Registry","getToolsForMode()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Tool Registry getToolsForMode() should return 34 tools for consolidated-with-aliases mode","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return 34 tools for consolidated-with-aliases mode"},{"ancestorTitles":["Tool Registry","getToolsForMode()"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"Tool Registry getToolsForMode() should throw error for invalid mode","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error for invalid mode"},{"ancestorTitles":["Tool Registry","getToolsForMode()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Tool Registry getToolsForMode() should include always-available tools in all modes","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should include always-available tools in all modes"},{"ancestorTitles":["Tool Registry","addVersionMetadata()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Tool Registry addVersionMetadata() should add metadata to response","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should add metadata to response"},{"ancestorTitles":["Tool Registry","addVersionMetadata()"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Tool Registry addVersionMetadata() should preserve existing metadata","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should preserve existing metadata"},{"ancestorTitles":["Tool Registry","addVersionMetadata()"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Tool Registry addVersionMetadata() should not mutate original response","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should not mutate original response"}],"endTime":1761861670835,"message":"","name":"/Users/shayon/DevProjects/mcp-for-lifeos/tests/unit/server/tool-registry.test.ts","startTime":1761861670805,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["QueryParser","extractTerms"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser extractTerms should extract single word","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should extract single word"},{"ancestorTitles":["QueryParser","extractTerms"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser extractTerms should extract multiple words","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should extract multiple words"},{"ancestorTitles":["QueryParser","extractTerms"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser extractTerms should handle quoted strings as single term","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle quoted strings as single term"},{"ancestorTitles":["QueryParser","extractTerms"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser extractTerms should handle mixed quoted and unquoted","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle mixed quoted and unquoted"},{"ancestorTitles":["QueryParser","extractTerms"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser extractTerms should handle extra whitespace","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle extra whitespace"},{"ancestorTitles":["QueryParser","extractTerms"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser extractTerms should handle empty string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle empty string"},{"ancestorTitles":["QueryParser","hasRegexChars"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser hasRegexChars should detect regex special chars","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should detect regex special chars"},{"ancestorTitles":["QueryParser","hasRegexChars"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser hasRegexChars should not flag spaces as regex chars","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not flag spaces as regex chars"},{"ancestorTitles":["QueryParser","hasRegexChars"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser hasRegexChars should not flag normal text","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not flag normal text"},{"ancestorTitles":["QueryParser","isQuoted"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser isQuoted should detect quoted strings","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should detect quoted strings"},{"ancestorTitles":["QueryParser","isQuoted"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser isQuoted should not detect unquoted strings","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should not detect unquoted strings"},{"ancestorTitles":["QueryParser","isQuoted"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser isQuoted should not detect partial quotes","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should not detect partial quotes"},{"ancestorTitles":["QueryParser","detectStrategy"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser detectStrategy should detect exact_phrase for quoted strings","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should detect exact_phrase for quoted strings"},{"ancestorTitles":["QueryParser","detectStrategy"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser detectStrategy should detect any_term for OR queries","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should detect any_term for OR queries"},{"ancestorTitles":["QueryParser","detectStrategy"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser detectStrategy should detect exact_phrase for 1-2 word queries","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should detect exact_phrase for 1-2 word queries"},{"ancestorTitles":["QueryParser","detectStrategy"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser detectStrategy should detect all_terms for 3+ word queries","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should detect all_terms for 3+ word queries"},{"ancestorTitles":["QueryParser","detectStrategy"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser detectStrategy should prioritize quotes over word count","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should prioritize quotes over word count"},{"ancestorTitles":["QueryParser","detectStrategy"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser detectStrategy should prioritize OR over word count","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should prioritize OR over word count"},{"ancestorTitles":["QueryParser","parse"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser parse should parse simple query","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should parse simple query"},{"ancestorTitles":["QueryParser","parse"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser parse should parse multi-word query","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should parse multi-word query"},{"ancestorTitles":["QueryParser","parse"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser parse should parse quoted query","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should parse quoted query"},{"ancestorTitles":["QueryParser","parse"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser parse should parse OR query","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should parse OR query"},{"ancestorTitles":["QueryParser","parse"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser parse should detect regex chars","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should detect regex chars"},{"ancestorTitles":["QueryParser","createPatterns","exact_phrase strategy"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser createPatterns exact_phrase strategy should create single pattern for sequential match","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should create single pattern for sequential match"},{"ancestorTitles":["QueryParser","createPatterns","exact_phrase strategy"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser createPatterns exact_phrase strategy should respect case sensitivity","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should respect case sensitivity"},{"ancestorTitles":["QueryParser","createPatterns","all_terms strategy"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser createPatterns all_terms strategy should create lookahead pattern for all terms","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should create lookahead pattern for all terms"},{"ancestorTitles":["QueryParser","createPatterns","all_terms strategy"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser createPatterns all_terms strategy should use word boundaries","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use word boundaries"},{"ancestorTitles":["QueryParser","createPatterns","any_term strategy"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser createPatterns any_term strategy should create alternation pattern for any term","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should create alternation pattern for any term"},{"ancestorTitles":["QueryParser","createPatterns","any_term strategy"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser createPatterns any_term strategy should use word boundaries","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use word boundaries"},{"ancestorTitles":["QueryParser","createPatterns","auto strategy"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser createPatterns auto strategy should fallback to exact_phrase for auto","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should fallback to exact_phrase for auto"},{"ancestorTitles":["QueryParser","Bug Regression: MCP-59"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser Bug Regression: MCP-59 should handle \"trip to india november planning\" with all_terms","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should handle \"trip to india november planning\" with all_terms"},{"ancestorTitles":["QueryParser","Bug Regression: MCP-59"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"QueryParser Bug Regression: MCP-59 should maintain exact_phrase for \"India trip\"","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should maintain exact_phrase for \"India trip\""}],"endTime":1761861670860,"message":"","name":"/Users/shayon/DevProjects/mcp-for-lifeos/tests/unit/query-parser.test.ts","startTime":1761861670836,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["SearchEngine MCP-59 regressions"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"SearchEngine MCP-59 regressions returns matches for all_terms queries after evaluating multiple notes","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"returns matches for all_terms queries after evaluating multiple notes"}],"endTime":1761861670873,"message":"","name":"/Users/shayon/DevProjects/mcp-for-lifeos/tests/unit/search-engine.test.ts","startTime":1761861670862,"status":"passed","summary":""}],"wasInterrupted":false}
